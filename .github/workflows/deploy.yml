name: Deploy React Frontend to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    if: github.repository_owner == 'dltkdgus482'
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Node.js 및 PNPM 설정
      - name: Install PNPM
        run: |
          echo "🚀 PNPM을 설치합니다."
          npm install -g pnpm
          echo "✅ PNPM 설치 완료!"

      - name: Set up Node.js & PNPM
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.2
          cache: 'pnpm'

      - name: Install Dependencies
        run: |
          echo "📦 패키지를 설치합니다."
          pnpm install --no-frozen-lockfile
          echo "✅ 패키치 설치 완료!"

      # 3. 빌드 실행
      - name: Build React App
        run: |
          echo "🏗️ 빌드를 시작합니다."
          pnpm build
          echo "✅ 빌드 완료!"
          echo "🗂️ 빌드된 파일 목록:"
          ls -al ./dist

      # 4. 배포 (EC2 서버로 파일 전송)
      - name: Deploy to AWS EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "🔑 SSH 키를 설정합니다."
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 400 private_key.pem
      
          echo "📂 EC2에 임시 디렉토리 생성"
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST "mkdir -p ~/temp-dist"
      
          echo "📤 dist 폴더 EC2로 전송 중..."
          scp -o StrictHostKeyChecking=no -i private_key.pem -r ./dist/* $EC2_USER@$EC2_HOST:~/temp-dist/
      
          echo "🚀 서버에서 sudo로 /var/www/html/에 복사"
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            sudo rm -rf /var/www/html/*
            sudo cp -r ~/temp-dist/* /var/www/html/
            rm -rf ~/temp-dist
          EOF
      
          echo "🎉 배포 완료!"

